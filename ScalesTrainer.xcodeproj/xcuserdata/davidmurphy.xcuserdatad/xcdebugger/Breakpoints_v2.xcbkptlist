<?xml version="1.0" encoding="UTF-8"?>
<Bucket
   uuid = "598FF346-62DA-418E-BD27-717FEF9F35F8"
   type = "1"
   version = "2.0">
   <Breakpoints>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "E2F1B0E2-8C81-420E-AA31-120B19A7E1C4"
            shouldBeEnabled = "No"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "ScalesTrainer/Model/AudioManager.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "252"
            endingLineNumber = "252"
            landmarkName = "stopRecording()"
            landmarkType = "7">
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "98C3A55E-AF7B-436B-BF41-5FEFF1ED5D89"
            shouldBeEnabled = "No"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "ScalesTrainer/Model/AudioManager.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "238"
            endingLineNumber = "238"
            landmarkName = "startRecordingMicWithTapHandler(tapHandler:recordAudio:)"
            landmarkType = "7">
            <Locations>
               <Location
                  uuid = "98C3A55E-AF7B-436B-BF41-5FEFF1ED5D89 - 2c205638b5d1e63a"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "ScalesTrainer.AudioManager.startRecordingMicWithTapHandler(tapHandler: ScalesTrainer.TapHandlerProtocol, recordAudio: Swift.Bool) -&gt; ()"
                  moduleName = "ScalesTrainer"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/davidmurphy/Projects/ScalesTrainer/ScalesTrainer/Model/AudioManager.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "219"
                  endingLineNumber = "219"
                  offsetFromSymbolStart = "2000">
               </Location>
               <Location
                  uuid = "98C3A55E-AF7B-436B-BF41-5FEFF1ED5D89 - 2c205638b5d1e63a"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "ScalesTrainer.AudioManager.startRecordingMicWithTapHandler(tapHandler: ScalesTrainer.TapHandlerProtocol, recordAudio: Swift.Bool) -&gt; ()"
                  moduleName = "ScalesTrainer"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/davidmurphy/Projects/ScalesTrainer/ScalesTrainer/Model/AudioManager.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "219"
                  endingLineNumber = "219"
                  offsetFromSymbolStart = "1968">
               </Location>
               <Location
                  uuid = "98C3A55E-AF7B-436B-BF41-5FEFF1ED5D89 - 2c205638b5d1e63a"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "ScalesTrainer.AudioManager.startRecordingMicWithTapHandler(tapHandler: ScalesTrainer.TapHandlerProtocol, recordAudio: Swift.Bool) -&gt; ()"
                  moduleName = "ScalesTrainer"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/davidmurphy/Projects/ScalesTrainer/ScalesTrainer/Model/AudioManager.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "219"
                  endingLineNumber = "219"
                  offsetFromSymbolStart = "1988">
               </Location>
            </Locations>
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "5386328D-31B3-467B-BA78-DB4BDE187540"
            shouldBeEnabled = "No"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "ScalesTrainer/View/ScalesView.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "398"
            endingLineNumber = "398"
            landmarkName = "body"
            landmarkType = "24">
            <Locations>
               <Location
                  uuid = "5386328D-31B3-467B-BA78-DB4BDE187540 - fbc667e09f7b8e25"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 () -&gt; SwiftUI.TupleView&lt;(Swift.Optional&lt;&lt;&lt;opaque return type of ScalesTrainer.ScalesView.SelectScaleParametersView() -&gt; some&gt;&gt;.0&gt;, &lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0, Swift.Optional&lt;SwiftUI.VStack&lt;Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0&gt;&gt;&gt;, ScalesTrainer.LegendView)&gt; in closure #2 () -&gt; SwiftUI.TupleView&lt;(Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.commonFrameStyle(backgroundColor: SwiftUI.Color, cornerRadius: CoreGraphics.CGFloat, borderColor: SwiftUI.Color, borderWidth: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0&gt;, SwiftUI._ConditionalContent&lt;&lt;&lt;opaque return type of ScalesTrainer.ScalesView.StopProcessView() -&gt; some&gt;&gt;.0, SwiftUI.TupleView&lt;(Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0&gt;, Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.commonFrameStyle(backgroundColor: SwiftUI.Color, cornerRadius: CoreGraphics.CGFloat, borderColor: SwiftUI.Color, borderWidth: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0&gt;, &lt;&lt;opaque return type of SwiftUI.View.commonFrameStyle(backgroundColor: SwiftUI.Color, cornerRadius: CoreGraphics.CGFloat, borderColor: SwiftUI.Color, borderWidth: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0, Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.commonFrameStyle(backgroundColor: SwiftUI.Color, cornerRadius: CoreGraphics.CGFloat, borderColor: SwiftUI.Color, borderWidth: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;, SwiftUI.Spacer)&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI.VStack&lt;&lt;&lt;opaque return type of SwiftUI.View.opacity(Swift.Double) -&gt; some&gt;&gt;.0&gt;, &lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0)&gt; in ScalesTrainer.ScalesView.body.getter : some"
                  moduleName = "ScalesTrainer"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/davidmurphy/Projects/ScalesTrainer/ScalesTrainer/View/ScalesView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "398"
                  endingLineNumber = "398"
                  offsetFromSymbolStart = "1520">
               </Location>
               <Location
                  uuid = "5386328D-31B3-467B-BA78-DB4BDE187540 - fbc667e09f7b8e25"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 () -&gt; SwiftUI.TupleView&lt;(Swift.Optional&lt;&lt;&lt;opaque return type of ScalesTrainer.ScalesView.SelectScaleParametersView() -&gt; some&gt;&gt;.0&gt;, &lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0, Swift.Optional&lt;SwiftUI.VStack&lt;Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0&gt;&gt;&gt;, ScalesTrainer.LegendView)&gt; in closure #2 () -&gt; SwiftUI.TupleView&lt;(Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.commonFrameStyle(backgroundColor: SwiftUI.Color, cornerRadius: CoreGraphics.CGFloat, borderColor: SwiftUI.Color, borderWidth: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0&gt;, SwiftUI._ConditionalContent&lt;&lt;&lt;opaque return type of ScalesTrainer.ScalesView.StopProcessView() -&gt; some&gt;&gt;.0, SwiftUI.TupleView&lt;(Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0&gt;, Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.commonFrameStyle(backgroundColor: SwiftUI.Color, cornerRadius: CoreGraphics.CGFloat, borderColor: SwiftUI.Color, borderWidth: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0&gt;, &lt;&lt;opaque return type of SwiftUI.View.commonFrameStyle(backgroundColor: SwiftUI.Color, cornerRadius: CoreGraphics.CGFloat, borderColor: SwiftUI.Color, borderWidth: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0, Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.commonFrameStyle(backgroundColor: SwiftUI.Color, cornerRadius: CoreGraphics.CGFloat, borderColor: SwiftUI.Color, borderWidth: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;, SwiftUI.Spacer)&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI.VStack&lt;&lt;&lt;opaque return type of SwiftUI.View.opacity(Swift.Double) -&gt; some&gt;&gt;.0&gt;, &lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0)&gt; in ScalesTrainer.ScalesView.body.getter : some"
                  moduleName = "ScalesTrainer"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/davidmurphy/Projects/ScalesTrainer/ScalesTrainer/View/ScalesView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "398"
                  endingLineNumber = "398"
                  offsetFromSymbolStart = "1808">
               </Location>
            </Locations>
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "85010C9D-773C-4732-A861-831239770668"
            shouldBeEnabled = "No"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "ScalesTrainer/View/ScalesView.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "423"
            endingLineNumber = "423"
            landmarkName = "body"
            landmarkType = "24">
            <Locations>
               <Location
                  uuid = "85010C9D-773C-4732-A861-831239770668 - e26272f2379467e0"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #2 () -&gt; SwiftUI.TupleView&lt;(Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.commonFrameStyle(backgroundColor: SwiftUI.Color, cornerRadius: CoreGraphics.CGFloat, borderColor: SwiftUI.Color, borderWidth: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0&gt;, SwiftUI._ConditionalContent&lt;&lt;&lt;opaque return type of ScalesTrainer.ScalesView.StopProcessView() -&gt; some&gt;&gt;.0, SwiftUI.TupleView&lt;(Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0&gt;, Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.commonFrameStyle(backgroundColor: SwiftUI.Color, cornerRadius: CoreGraphics.CGFloat, borderColor: SwiftUI.Color, borderWidth: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0&gt;, &lt;&lt;opaque return type of SwiftUI.View.commonFrameStyle(backgroundColor: SwiftUI.Color, cornerRadius: CoreGraphics.CGFloat, borderColor: SwiftUI.Color, borderWidth: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0, Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.commonFrameStyle(backgroundColor: SwiftUI.Color, cornerRadius: CoreGraphics.CGFloat, borderColor: SwiftUI.Color, borderWidth: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;, SwiftUI.Spacer)&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI.VStack&lt;&lt;&lt;opaque return type of SwiftUI.View.opacity(Swift.Double) -&gt; some&gt;&gt;.0&gt;, &lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0)&gt; in ScalesTrainer.ScalesView.body.getter : some"
                  moduleName = "ScalesTrainer"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/davidmurphy/Projects/ScalesTrainer/ScalesTrainer/View/ScalesView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "423"
                  endingLineNumber = "423"
                  offsetFromSymbolStart = "3344">
               </Location>
               <Location
                  uuid = "85010C9D-773C-4732-A861-831239770668 - e26272f2379467e0"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #2 () -&gt; SwiftUI.TupleView&lt;(Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.commonFrameStyle(backgroundColor: SwiftUI.Color, cornerRadius: CoreGraphics.CGFloat, borderColor: SwiftUI.Color, borderWidth: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0&gt;, SwiftUI._ConditionalContent&lt;&lt;&lt;opaque return type of ScalesTrainer.ScalesView.StopProcessView() -&gt; some&gt;&gt;.0, SwiftUI.TupleView&lt;(Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0&gt;, Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.commonFrameStyle(backgroundColor: SwiftUI.Color, cornerRadius: CoreGraphics.CGFloat, borderColor: SwiftUI.Color, borderWidth: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0&gt;, &lt;&lt;opaque return type of SwiftUI.View.commonFrameStyle(backgroundColor: SwiftUI.Color, cornerRadius: CoreGraphics.CGFloat, borderColor: SwiftUI.Color, borderWidth: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0, Swift.Optional&lt;&lt;&lt;opaque return type of SwiftUI.View.commonFrameStyle(backgroundColor: SwiftUI.Color, cornerRadius: CoreGraphics.CGFloat, borderColor: SwiftUI.Color, borderWidth: CoreGraphics.CGFloat) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;, SwiftUI.Spacer)&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI.VStack&lt;&lt;&lt;opaque return type of SwiftUI.View.opacity(Swift.Double) -&gt; some&gt;&gt;.0&gt;, &lt;&lt;opaque return type of SwiftUI.View.frame(width: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, height: Swift.Optional&lt;CoreGraphics.CGFloat&gt;, alignment: SwiftUI.Alignment) -&gt; some&gt;&gt;.0)&gt; in ScalesTrainer.ScalesView.body.getter : some"
                  moduleName = "ScalesTrainer"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/davidmurphy/Projects/ScalesTrainer/ScalesTrainer/View/ScalesView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "423"
                  endingLineNumber = "423"
                  offsetFromSymbolStart = "4068">
               </Location>
            </Locations>
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "24A97F08-1483-41EC-8336-0EA2C25C2A9D"
            shouldBeEnabled = "No"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "ScalesTrainer/Model/TapHandler.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "104"
            endingLineNumber = "104"
            landmarkName = "tapUpdate(_:_:)"
            landmarkType = "7">
            <Locations>
               <Location
                  uuid = "24A97F08-1483-41EC-8336-0EA2C25C2A9D - 826cd81b173aa0a6"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "ScalesTrainer.PracticeTapHandler.tapUpdate(Swift.Array&lt;Swift.Float&gt;, Swift.Array&lt;Swift.Float&gt;) -&gt; ()"
                  moduleName = "ScalesTrainer"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/davidmurphy/Projects/ScalesTrainer/ScalesTrainer/Model/TapHandler.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "104"
                  endingLineNumber = "104"
                  offsetFromSymbolStart = "4032">
               </Location>
               <Location
                  uuid = "24A97F08-1483-41EC-8336-0EA2C25C2A9D - 826cd81b173aa0a6"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "ScalesTrainer.PracticeTapHandler.tapUpdate(Swift.Array&lt;Swift.Float&gt;, Swift.Array&lt;Swift.Float&gt;) -&gt; ()"
                  moduleName = "ScalesTrainer"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/davidmurphy/Projects/ScalesTrainer/ScalesTrainer/Model/TapHandler.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "104"
                  endingLineNumber = "104"
                  offsetFromSymbolStart = "4072">
               </Location>
            </Locations>
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "7CBD1ECB-CE63-4245-BF07-965A252D00FC"
            shouldBeEnabled = "No"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "ScalesTrainer/Model/Backer.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "21"
            endingLineNumber = "21"
            landmarkName = "metronomeStart()"
            landmarkType = "7">
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "F3B4D9E6-E9E2-4857-B66A-5984C201FD5C"
            shouldBeEnabled = "No"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "ScalesTrainer/Model/Backer.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "85"
            endingLineNumber = "85"
            landmarkName = "metronomeTicked(timerTickerNumber:)"
            landmarkType = "7">
            <Locations>
               <Location
                  uuid = "F3B4D9E6-E9E2-4857-B66A-5984C201FD5C - d5c8f5256e492904"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "ScalesTrainer.Backer.metronomeTicked(timerTickerNumber: Swift.Int) -&gt; Swift.Bool"
                  moduleName = "ScalesTrainer"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/davidmurphy/Projects/ScalesTrainer/ScalesTrainer/Model/Backer.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "85"
                  endingLineNumber = "85"
                  offsetFromSymbolStart = "284">
               </Location>
               <Location
                  uuid = "F3B4D9E6-E9E2-4857-B66A-5984C201FD5C - d5c8f5256e492904"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "ScalesTrainer.Backer.metronomeTicked(timerTickerNumber: Swift.Int) -&gt; Swift.Bool"
                  moduleName = "ScalesTrainer"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/davidmurphy/Projects/ScalesTrainer/ScalesTrainer/Model/Backer.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "85"
                  endingLineNumber = "85"
                  offsetFromSymbolStart = "288">
               </Location>
            </Locations>
         </BreakpointContent>
      </BreakpointProxy>
   </Breakpoints>
</Bucket>
